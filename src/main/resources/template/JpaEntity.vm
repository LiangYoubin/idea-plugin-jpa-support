########################################################################################################################
### Here are the variables available in the template:
### ${USER}: System.getProperty("user.name")
### ${DATE}: current date, format is yyyy-MM-dd
### ${TIME}: current time, format is HH:mm:ss
### ${YEAR}: currrent year, format is yyyy
### ${MONTH}: current month, format is MM
### ${DAY}: current day of month, format is dd
### ${HOUR}: current hour of day, format is HH
### ${MINUTE}: current minute of hour, format is mm
### ${SECOND}: current second of minute, format is ss
###
### ${package}: package name, eg: org.example
### ${importClassList}: import class list, type is java.util.List
### ${simpleName}: repository class simple name, eg: Example
### ${parentClass}: parent class simple name, eg: AbstractEntity, may be empty
### ${implementClassList}: implements interface list, type is java.util.Set
### ${config}: generator config, type is com.ifengxue.plugin.generator.config.GeneratorConfig
###            This is main configuration, contains driver config, tables config.
### ${tablesConfig}: table config, type is com.ifengxue.plugin.generator.config.TablesConfig, contains generator settings, eg: use Lombok, generate field comment, etc.
### ${table}: table info and columns info, type is com.ifengxue.plugin.entity.Table
### ${empty}: empty string
### ${stringHelper}: some string method, eg: parseSetMethodName, parseGetMethodName, type is com.ifengxue.plugin.util.StringHelper
### ${indent}: indent, type is com.ifengxue.plugin.generator.tree.Element.Indent
### ${annotationList}: annotation list, type is java.util.Set, eg: Data, Entity, Table(name = "example")
### ${serialVersionUID}: serialVersionUID
### ${useLombok}: use or not use Lombok
### ${columns}: table columns
###
###
### For more information: https://github.com/carter-ya/idea-plugin-jpa-support/blob/master/src/main/java/com/ifengxue/plugin/generator/source/EntitySourceParserV2.java
########################################################################################################################
#if(!$package.isEmpty())
package $package;

#end
#foreach($importClass in $importClassList)
import $importClass;
#end
#if($importClassList)
 ## add empty line

#end
#if($tablesConfig.isUseClassComment() && !$table.getTableComment().isEmpty())
/*
* $table.getTableComment()
*/
#end
#foreach($annotation in $annotationList)
@$annotation
#end
public class $simpleName#if(!$parentClass.isEmpty()) extends $parentClass#end#if($implementClassList) implements $empty.join(", ", $implementClassList)#end {

#if($serialVersionUID)
$indent.getIndent()private static final long serialVersionUID = ${serialVersionUID}L;

#end
#foreach($column in $columns)
#if($tablesConfig.isUseFieldComment() && !$column.getColumnComment().isEmpty())
$indent.getIndent()/*
$indent.getIndent() * $column.getColumnComment()
$indent.getIndent() */
#end
#if($column.isPrimary())
$indent.getIndent()@Id
$indent.getIndent()@GeneratedValue(strategy = $primaryKeyGeneratorStrategy#if($primaryKeyGenerator), generator="$primaryKeyGenerator"#end)
#if($primaryKeyGenerator)$indent.getIndent()@SequenceGenerator(name = "$primaryKeyGenerator", sequenceName = "$primaryKeyGenerator")#end
#end
$indent.getIndent()@Column(name = "$column.getColumnName()"#if(!$column.isNullable()), nullable = false#end)
$indent.getIndent()private $column.getJavaDataType().getSimpleName() $column.getFieldName()#if($tablesConfig.requireWriteDefaultValue($column)) = $column.getDefaultValue()#end;

#end
#if(!$useLombok)
#foreach($column in $columns)
#if($tablesConfig.isUseFieldComment() && !$column.getColumnComment().isEmpty())
$indent.getIndent()/*
$indent.getIndent() * $column.getColumnComment()
$indent.getIndent() */
#end
$indent.getIndent()public void $stringHelper.parseSetMethodName($column.getFieldName())($column.getJavaDataType().getSimpleName() $column.getFieldName()) {
$indent.getDoubleIndent()this.$column.getFieldName() = $column.getFieldName();
$indent.getIndent()}

 #if($tablesConfig.isUseFieldComment() && !$column.getColumnComment().isEmpty())
$indent.getIndent()/*
$indent.getIndent() * $column.getColumnComment()
$indent.getIndent() */
#end
$indent.getIndent()public $column.getJavaDataType().getSimpleName() $stringHelper.parseGetMethodName($column.getFieldName(),$column.getJavaDataType())() {
$indent.getDoubleIndent()return $column.getFieldName();
$indent.getIndent()}

#end
#end
#if(!$useLombok)
$indent.getIndent()@Override
$indent.getIndent()public String toString() {
$indent.getDoubleIndent()return "$simpleName{" +
#foreach($column in $columns)
$indent.getDoubleIndent()    "$column.getFieldName()=" + $column.getFieldName() + '\'' +
#end
$indent.getDoubleIndent()    '}';
$indent.getIndent()}
#end
}
